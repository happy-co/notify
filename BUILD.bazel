load("@io_bazel_rules_go//go:def.bzl", "cgo_library", "go_library", "go_prefix", "go_test")

go_prefix("github.com/rjeczalik/notify")

cgo_library(
    name = "cgo_default_library",
    srcs = select({
        "@io_bazel_rules_go//go/platform:darwin_amd64": ["watcher_fsevents_cgo.go"],
        "//conditions:default": [],
    }),
    clinkopts = select({
        "@io_bazel_rules_go//go/platform:darwin_amd64": [
            "-framework",
            "CoreServices",
        ],
        "//conditions:default": [],
    }),
    visibility = ["//visibility:private"],
)

go_library(
    name = "go_default_library",
    srcs = [
        "debug.go",
        "doc.go",
        "event.go",
        "event_stub.go",
        "node.go",
        "notify.go",
        "tree.go",
        "tree_nonrecursive.go",
        "tree_recursive.go",
        "util.go",
        "watcher.go",
        "watcher_stub.go",
        "watchpoint.go",
        "watchpoint_other.go",
    ] + select({
        "@io_bazel_rules_go//go/platform:darwin_amd64": [
            "event_fsevents.go",
            "watcher_fsevents.go",
        ],
        "@io_bazel_rules_go//go/platform:linux_amd64": [
            "event_inotify.go",
            "watcher_inotify.go",
        ],
        "@io_bazel_rules_go//go/platform:windows_amd64": [
            "event_readdcw.go",
            "watcher_readdcw.go",
            "watchpoint_readdcw.go",
        ],
        "//conditions:default": [],
    }),
    library = select({"@io_bazel_rules_go//go/platform:darwin_amd64": ":cgo_default_library", "//conditions:default": None }),
    visibility = ["//visibility:public"],
    deps = select({
        "@io_bazel_rules_go//go/platform:linux_amd64": ["@org_golang_x_sys//unix:go_default_library"],
        "//conditions:default": [],
    }),
)

go_test(
    name = "go_default_test",
    srcs = [
        "event_test.go",
        "sync_unix_test.go",
        "testing_test.go",
        "tree_nonrecursive_test.go",
        "tree_recursive_test.go",
        "util_test.go",
        "util_unix_test.go",
        "watchpoint_test.go",
    ] + select({
        "@io_bazel_rules_go//go/platform:darwin_amd64": [
            "notify_test.go",
            "util_darwin_test.go",
            "watcher_fsevents_test.go",
            "watcher_recursive_test.go",
            "watcher_test.go",
        ],
        "@io_bazel_rules_go//go/platform:linux_amd64": [
            "notify_inotify_test.go",
            "notify_test.go",
            "watcher_inotify_test.go",
            "watcher_test.go",
        ],
        "@io_bazel_rules_go//go/platform:windows_amd64": [
            "notify_readdcw_test.go",
            "notify_test.go",
            "sync_readdcw_test.go",
            "watcher_readdcw_test.go",
            "watcher_recursive_test.go",
            "watcher_test.go",
        ],
        "//conditions:default": [],
    }),
    data = glob(["testdata/**"]),
    library = ":go_default_library",
    deps = ["@org_golang_x_sys//unix:go_default_library"],
)

go_test(
    name = "go_default_xtest",
    srcs = [
        "example_test.go",
    ] + select({
        "@io_bazel_rules_go//go/platform:darwin_amd64": ["example_fsevents_test.go"],
        "@io_bazel_rules_go//go/platform:linux_amd64": ["example_inotify_test.go"],
        "@io_bazel_rules_go//go/platform:windows_amd64": ["example_readdcw_test.go"],
        "//conditions:default": [],
    }),
    data = glob(["testdata/**"]),
    deps = [
        "//:go_default_library",
    ] + select({
        "@io_bazel_rules_go//go/platform:linux_amd64": ["@org_golang_x_sys//unix:go_default_library"],
        "//conditions:default": [],
    }),
)
